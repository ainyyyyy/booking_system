# Generated by Django 5.2 on 2025-10-03 05:28

import django.contrib.postgres.constraints
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('easybook', '0004_alter_user_date_of_birth_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField(blank=True, unique=True)),
                ('logo', models.ImageField(blank=True, upload_to='media')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Admin'), ('staff', 'Staff')], default='staff', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=100)),
                ('company_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('company_phone', models.CharField(blank=True, max_length=30, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.RemoveConstraint(
            model_name='booking',
            name='prevent_overlap_for_the_same_user',
        ),
        migrations.RenameField(
            model_name='resource',
            old_name='site',
            new_name='url',
        ),
        migrations.AddField(
            model_name='resource',
            name='requires_staff',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='resource',
            name='name',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='resource',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_resources', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['is_active'], name='easybook_co_is_acti_06b32e_idx'),
        ),
        migrations.AddField(
            model_name='resource',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='easybook.company'),
        ),
        migrations.AddField(
            model_name='companymembership',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easybook.company'),
        ),
        migrations.AddField(
            model_name='companymembership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='resourcestaff',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easybook.resource'),
        ),
        migrations.AddField(
            model_name='staff',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to='easybook.company'),
        ),
        migrations.AddField(
            model_name='staff',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_profiles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='resourcestaff',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='easybook.staff'),
        ),
        migrations.AddField(
            model_name='booking',
            name='staff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='easybook.staff'),
        ),
        migrations.AddField(
            model_name='resource',
            name='staff_members',
            field=models.ManyToManyField(blank=True, related_name='resources', through='easybook.ResourceStaff', to='easybook.staff'),
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['company'], name='easybook_re_company_c117ad_idx'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(expressions=(('user', '='), ('resource', '='), ('timerange', '&&')), name='prevent_overlap_for_the_same_user_and_resource'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(condition=models.Q(('staff__isnull', False)), expressions=(('staff', '='), ('timerange', '&&')), name='prevent_staff_double_booking'),
        ),
        migrations.AddConstraint(
            model_name='resource',
            constraint=models.UniqueConstraint(fields=('company', 'name'), name='uniq_resource_name_per_company'),
        ),
        migrations.AddIndex(
            model_name='companymembership',
            index=models.Index(fields=['company', 'is_active'], name='easybook_co_company_fe6f2e_idx'),
        ),
        migrations.AddIndex(
            model_name='companymembership',
            index=models.Index(fields=['company', 'role'], name='easybook_co_company_97d7d8_idx'),
        ),
        migrations.AddConstraint(
            model_name='companymembership',
            constraint=models.UniqueConstraint(fields=('company', 'user'), name='uniq_company_user_membership'),
        ),
        migrations.AddIndex(
            model_name='staff',
            index=models.Index(fields=['company', 'is_active'], name='easybook_st_company_0369c4_idx'),
        ),
        migrations.AddConstraint(
            model_name='staff',
            constraint=models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('company', 'user'), name='uniq_company_user_as_staff'),
        ),
        migrations.AddIndex(
            model_name='resourcestaff',
            index=models.Index(fields=['resource'], name='easybook_re_resourc_0ead55_idx'),
        ),
        migrations.AddIndex(
            model_name='resourcestaff',
            index=models.Index(fields=['staff'], name='easybook_re_staff_i_2b9189_idx'),
        ),
        migrations.AddConstraint(
            model_name='resourcestaff',
            constraint=models.UniqueConstraint(fields=('resource', 'staff'), name='uniq_resource_staff_pair'),
        ),
    ]
