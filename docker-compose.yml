services:
 db:
   image: postgres:17
   environment:
     POSTGRES_DB: ${DATABASE_NAME}
     POSTGRES_USER: ${DATABASE_USERNAME}
     POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
   ports:
     - "5433:5432"
   volumes:
     - postgres_data:/var/lib/postgresql/data
   env_file:
     - .env
 
 django-web:
   build: backend/backend
   container_name: django-docker
   volumes:
     - static_volume:/app/web/staticfiles
     - media_volume:/app/web/mediafiles
     - ./backend/backend:/app/web

   expose:
     - 8000
   depends_on:
     - db
   environment:
     DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
     DEBUG: ${DEBUG}
     DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
     DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
     DATABASE_ENGINE: ${DATABASE_ENGINE}
     DATABASE_NAME: ${DATABASE_NAME}
     DATABASE_USERNAME: ${DATABASE_USERNAME}
     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
     DATABASE_HOST: ${DATABASE_HOST}
     DATABASE_PORT: ${DATABASE_PORT}
   env_file:
     - .env
 nginx:
   build: ./backend/backend/nginx
   volumes:
      - static_volume:/app/web/staticfiles
   ports:
    - 80:80
   depends_on:
    - django-web
  
 celery:
    build: backend/backend
    command: celery -A booking_system worker --loglevel=DEBUG
    volumes:
      - ./backend/backend:/app/web
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      CELERY_BROKER: ${CELERY_BROKER_URL}
      CELERY_BACKEND: ${CELERY_RESULT_BACKEND}
    depends_on:
      - django-web
      - redis
    env_file:
    - .env


 redis:
    image: redis:7.4


volumes:
   postgres_data:
   static_volume:
   media_volume:

  